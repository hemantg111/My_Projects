
-- Show customer number, customer name, state and credit limit from customers table for below conditions. Sort the results by highest to lowest values of creditLimit.
State should not contain null values
credit limit should be between 50000 and 100000

select * from customers;
select customerNumber, customerName, state, creditLimit 
from customers 
where state is not null and creditLimit between 50000 and 100000
 order by creditLimit desc;

-- Show the unique productline values containing the word cars at the end from products table.
   Table- Productline

## Code- select distinct productLine from productlines where productLine like '%Cars';


-- Show the orderNumber, status and comments from orders table for shipped status only. If some comments are having null values then show them as “-“.

   ## CODE- select orderNumber, status, ifnull(comments, '-') as comments from orders;


-- Select employee number, first name, job title and job title abbreviation from employees table based on following conditions.
   If job title is one among the below conditions, then job title abbreviation column should show below forms.
   President then “P”
   Sales Manager / Sale Manager then “SM”
   Sales Rep then “SR”
   Containing VP word then “VP”.
-- Table- employees

##CODE- 
          select employeeNumber, firstName, jobTitle,
          case
          when jobTitle like "President" then "P"
          when jobTitle like "%Sale Manager%" then "SM"
          when jobTitle like "%Sales Manager%" then "SM"
          when jobTitle like "Sales Rep" then "SR"
          when jobTitle like "%VP%" then "VP"
          end as jobTitle_abbre 
          from employees order by jobTitle;


-- For every year, find the minimum amount value from payments table.

## CODE-   select year(paymentDate) as Year, min(amount) as MinAmount from payments group by Year order by Year;

-- 3)	Show the second highest quantity ordered value for each order number.
-- Table: Orderdetails

## CODE- select ordernumber, quantityOrdered, nth_value (quantityOrdered, 2) over (order by orderNumber desc) as second_highest_quantity from orderdetails;

-- Write a query for Total sales by product wise
Table- OrderDetails and Products

## CODE- SELECT p.ProductName,p.productLine, SUM(od.Quantityordered * od.PriceEach) AS TotalSales
         FROM OrderDetails od
         JOIN Products p ON od.ProductCode = p.ProductCode
         GROUP BY p.ProductName, p.productLine order by TotalSales desc;

-- -- 2)	Show total quantities, total quantities in stock, left over quantities for each product and each customer. Sort the data by customer number.
--      Tables: Customers, Orders, Orderdetails, Products
desc orders;
desc employees;
desc customers;
desc Products;
desc orderdetails;

## Code-  
select p.productCode, p.productName, c.customerName, sum(od.quantityOrdered) as Total_quantity, sum(p.quantityInStock) as TotalQuantity_in_Stock,
(sum(p.quantityInStock)-sum(od.QuantityOrdered)) as Left_quantity
from orders o join orderdetails od on o.orderNumber=od.orderNumber join customers c on o.customerNumber=c.customerNumber join products p on p.productCode=od.productCode 
group by p.productCode, c.customerNumber order by  c.customerNumber;











